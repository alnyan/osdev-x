[config]
default_to_workspace = true

[env]
QEMU = { value = "qemu-system-aarch64", condition = { env_not_set = ["QEMU"] } }
GDB = { value = "aarch64-linux-gnu-gdb", condition = { env_not_set = ["GDB"] } }

TARGET = { value = "aarch64-unknown-none", condition = { env_not_set = ["TARGET"] } }
PROFILE = { source = "${CARGO_MAKE_PROFILE}", mapping = { "production" = "release", "development" = "debug" } }

# Cargo stuff
CARGO_RELEASE_OPT = { source = "${CARGO_MAKE_PROFILE}", mapping = { "production" = "--release", "development" = "" } }
CARGO_OPTS="""\
    --target=${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/etc/${TARGET}.json \
    -Z build-std=core,alloc,compiler_builtins \
    ${CARGO_RELEASE_OPT} \
"""

# Qemu stuff
QEMU_EXTRA_OPTS = { value = "", condition = { env_not_set = ["QEMU_EXTRA_OPTS"] } }
QEMU_OPTS = """\
    -s \
    -serial mon:stdio \
    -cpu cortex-a57 \
    -M virt \
    -display none \
    -smp 4 \
    ${QEMU_EXTRA_OPTS} \
"""

OUTPUT_DIR = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/target/${TARGET}/${PROFILE}"

[tasks.default]
alias = "all"

[tasks.all]
dependencies = ["kernel-bin"]

[tasks.build]
command = "cargo"
args = ["build", "@@split(CARGO_OPTS, ,remove-empty)"]

[tasks.kernel-bin]
dependencies = ["build"]
script_runner = "@duckscript"
script = [
'''
    srcFile = set ${OUTPUT_DIR}/${CARGO_MAKE_PROJECT_NAME}
    dstFile = set ${OUTPUT_DIR}/kernel.bin

    exec --fail-on-error llvm-objcopy -O binary ${srcFile} ${dstFile}
'''
]

[tasks.qemu]
dependencies = ["kernel-bin"]
command = "${QEMU}"
args = [
    "-kernel",
    "${OUTPUT_DIR}/kernel.bin",
    "@@split(QEMU_OPTS, ,remove-empty)"
]

[tasks.qemu-gdb]
env = { "KERNEL_BINARY" = "${OUTPUT_DIR}/${CARGO_MAKE_PROJECT_NAME}" }
command = "${GDB}"
args = ["-x", "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/etc/${TARGET}.gdb", "${KERNEL_BINARY}"]

[tasks.doc]
command = "cargo"
args = ["doc"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "@@split(CARGO_OPTS, ,remove-empty)"]
